              Python unsio wrapper installation


*) Requirements
   ============

Before installing python unsio wrapper you must install UNSIO (see
INSTALL in UNSIO directory)

Unsio python wrapper should compile fine on Linux and MacOSX. You just
need a recent gcc/g++ compiler and  cmake tools (version 2.6). Cmake
tools can be installed directly from your distribution or downloaded
from "here :":http://www.cmake.org/cmake/resources/software.html. You
need also the  SWIG library, and  numpy development library.  

*) Configuration
   =============

(We assume that UNSIOSRC specify your UNSIO sources directory, and
UNSIOPATH your UNSIO installation path directory) 

To configure python unsio wrapper, do the following :

cd UNSIOSRC/py
mkdir build
cd build
cmake ..

You can add several options to command "cmake". The most important ones are:


  -DCMAKE_BUILD_TYPE=<Debug|Release>    build type [Debug]


Here are different scenarios :

*) default configuration (no options added)

cd UNSIOSRC/py
mkdir build-debug
cd build-debug
cmake ..

Will configure *py_unsio* in "debug" mode

*) release mode (with optimizations enabled)

cd UNSIOSRC/py
mkdir build-release
cd build-release
cmake .. -DCMAKE_BUILD_TYPE=Release

Will configure *py_unsio* in "release" mode with shared library.

*) so forth and so on.....

Note that CMake maintains a cache name "CMakeCache.txt". If you change
options (or your environment changes), it is best to remove that file
to avoid problems. 

*) Building
   ========

To build  py_unsio library, enter

  make

To install py_unsio module and library,  enter

  make install

note that files will be installed in _UNSIOPATH_/py/modules
directory. In order to use *py_unsio* module, you have to add path
_UNSIOPATH_/py/modules to your environment variable PYTHONPATH

export PYTHONPATH=_UNSIOPATH_/py/modules

_UNSIOPATH_ must match the asbolute path of UNSIO installed directory

A list of all available make targets can be obtained by

  make help
